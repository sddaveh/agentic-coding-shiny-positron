---
title: "Australian Tourism Forecast"
format: html
---


```{r echo=FALSE, message=FALSE, warning=FALSE}
library(fpp3)
library(gt)
require(urca)
```

## Tab1 - Visualizatoin

### Data import / preparation

* Inputs - multiselect for Purpose
* Train date cutoff - default to 1 year prior to the max date

```{r}
# aggregate into Purpose
data("tourism")
data <- tourism |> 
  group_by(Purpose) |>
  summarise(Trips = sum(Trips)) 

#create training cutoff date and split data
train_cutoff <- yearquarter("2017 Jan 01")
```

###  Data visualization

```{r}
# visualize the data with autoplot and facets by purpose
data_trn <- data |>
  filter(Quarter < train_cutoff)

data |>
  autoplot(Trips) +
  geom_vline(xintercept = as_date(train_cutoff), color = "red", linetype = "dashed") +
  labs(y = "Trips", title = "Tourism data") +
  facet_wrap(~Purpose, ncol = 1, scales = "free_y") +
  theme_minimal()


```

## Tab 2 - Model Building

Inputs:

* Toggle for model specificatoin (default off)
* Toggle Training accuracy (default off)

### Model fitting

Build multiple models for the Purpose series using Auto ARIMA and ETS.
```{r}
fit <- data_trn |>
  model(
    arima = ARIMA(Trips),
    ets = ETS(Trips)
  )
fit # output the model specifications
```

### Training accuracy 

```{r}
fit |> 
  accuracy() |> 
  select(Purpose, .model, RMSE, MAE, MAPE) |>
  arrange(.model, MAPE) |>
  gt() |> fmt_number(decimals = 2)
```


### Forecast accuracy 

```{r}
fc <- fit |> 
  forecast(h = "1 year")
fc |> 
  accuracy(data) |> 
  select(Purpose, .model, RMSE, MAE, MAPE) |>
  arrange(.model, MAPE) |>
  gt() |> fmt_number(decimals = 2)
```

## Tab3 - Forecast

Inputs:

* Select the model for the Forecast table

### Forecast visualization 

```{r}
trn_start <- yearquarter( train_cutoff |> as.Date() - years(1) )
fc |> 
  autoplot(data |> filter(Quarter >= trn_start)) +
  labs(y = "Trips", title = "Tourism data forecasts") +
  facet_wrap(Purpose ~ .model, ncol = 2) +
  theme_minimal()
```

## Forecast table

```{r}
fc |> 
  filter(.model == 'arima') |>
  as_tibble() |>
  select(Purpose, .model, Quarter, .mean) |>
  pivot_wider(names_from = Quarter, values_from = .mean) |>
  gt() |> fmt_number(decimals = 0)
```